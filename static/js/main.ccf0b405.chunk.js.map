{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","firstName","lastName","email","values","setValues","submitted","setSubmitted","valid","setValid","className","onSubmit","event","preventDefault","id","type","placeholder","name","value","onChange","target","pattern","Í","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAuGeA,MAnGf,WAAgB,IAAD,EACeC,mBAAS,CACnCC,UAAW,GACXC,SAAU,GACVC,MAAO,KAJI,mBACNC,EADM,KACEC,EADF,OAOqBL,oBAAS,GAP9B,mBAONM,EAPM,KAOKC,EAPL,OASaP,oBAAS,GATtB,mBASNQ,EATM,KASCC,EATD,KAwCb,OACE,qBAAKC,UAAU,iBAAf,SACE,uBAAMA,UAAU,gBAAgBC,SAVf,SAACC,GACpBA,EAAMC,iBACFT,EAAOH,WAAaG,EAAOF,UAAYE,EAAOD,OAChDM,GAAS,GAEXF,GAAa,IAKX,UACGD,GAAaE,EACZ,qBAAKE,UAAU,kBAAf,gDAGE,KACJ,sBAAKA,UAAU,aAAf,UACE,uBACEI,GAAG,aACHJ,UAAU,aACVK,KAAK,OACLC,YAAY,aACZC,KAAK,YACLC,MAAOd,EAAOH,UACdkB,SA7CoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/Bf,GAAU,SAACD,GAAD,mBAAC,eACNA,GADK,IAERH,UAAWmB,EAAOF,YA2CZG,QAAQ,sBAETf,IAAcF,EAAOH,WAAa,mBAAGa,GAAG,QAAN,0CAErC,sBAAKJ,UAAU,aAAf,UACE,uBACEI,GAAG,YACHJ,UAAU,aACVK,KAAK,OACLC,YAAY,YACZC,KAAK,WACLC,MAAOd,EAAOF,SACdiB,SAnDmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC9Bf,GAAU,SAACD,GAAD,mBAAC,eACNA,GADK,IAERF,SAAUkB,EAAOF,YAiDXG,QAAQ,sBAETf,IAAcF,EAAOF,UACpB,mBAAGY,GAAG,QAAN,yCAGJ,sBAAKJ,UAAU,aAAf,UACE,mCACEI,GAAG,QACHJ,UAAU,aACVK,KAAK,OACLC,YAAY,QACZC,KAAK,QACLC,MAAOd,EAAOD,MAAMmB,QAAC,EACrBH,SA3DgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3Bf,GAAU,SAACD,GAAD,mBAAC,eACNA,GADK,IAERD,MAAOiB,EAAOF,YAyDRG,QAAQ,2CARV,YAUCf,IAAcF,EAAOD,OACpB,mBAAGW,GAAG,QAAN,8CAGJ,wBAAQJ,UAAU,kBAAkBK,KAAK,SAAzC,4BCnFOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ccf0b405.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [values, setValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  });\n\n  const [submitted, setSubmitted] = useState(false);\n\n  const [valid, setValid] = useState(false);\n\n  const handelFirstNameChange = ({ target }) => {\n    setValues((values) => ({\n      ...values,\n      firstName: target.value,\n    }));\n  };\n\n  const handelLastNameChange = ({ target }) => {\n    setValues((values) => ({\n      ...values,\n      lastName: target.value,\n    }));\n  };\n\n  const handelEmailChange = ({ target }) => {\n    setValues((values) => ({\n      ...values,\n      email: target.value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (values.firstName && values.lastName && values.email) {\n      setValid(true);\n    }\n    setSubmitted(true);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form className=\"register-form\" onSubmit={handleSubmit}>\n        {submitted && valid ? (\n          <div className=\"success-message\">\n            Success! Thank you for registering\n          </div>\n        ) : null}\n        <div className=\"form-group\">\n          <input\n            id=\"first-name\"\n            className=\"form-field\"\n            type=\"text\"\n            placeholder=\"First Name\"\n            name=\"firstName\"\n            value={values.firstName}\n            onChange={handelFirstNameChange}\n            pattern=\"^[A-Z][-a-zA-Z]+$\"\n          />\n          {submitted && !values.firstName && <p id=\"error\">Please enter a first name</p>}\n        </div>\n        <div className=\"form-group\">\n          <input\n            id=\"last-name\"\n            className=\"form-field\"\n            type=\"text\"\n            placeholder=\"Last Name\"\n            name=\"lastName\"\n            value={values.lastName}\n            onChange={handelLastNameChange}\n            pattern=\"^[A-Z][-a-zA-Z]+$\"\n          />\n          {submitted && !values.lastName && (\n            <p id=\"error\">Please enter a last name</p>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <input\n            id=\"email\"\n            className=\"form-field\"\n            type=\"text\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={values.email}Í\n            onChange={handelEmailChange}\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"Í\n          />\n          {submitted && !values.email && (\n            <p id=\"error\">Please enter an email address</p>\n          )}\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}